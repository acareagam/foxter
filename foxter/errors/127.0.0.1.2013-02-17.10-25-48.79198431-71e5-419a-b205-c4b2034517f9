(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> format requires a mapping"
p3
sS'layer'
p4
S'/home/python/P\xc3\xbablico/web2py/web2py-master/applications/foxter/views/bootstrap/app/person/publictimeline.html'
p5
sS'code'
p6
S'left_sidebar_enabled=True\nresponse.write(\'\\n\', escape=False)\nresponse.write(\'<!DOCTYPE html>\\n<!--[if lt IE 7 ]><html class="ie ie6" lang="en"> <![endif]-->\\n<!--[if IE 7 ]><html class="ie ie7" lang="en"> <![endif]-->\\n<!--[if IE 8 ]><html class="ie ie8" lang="en"> <![endif]-->\\n<!--[if (gte IE 9)|!(IE)]><!--><html lang="es" xmlns="http://www.w3.org/1999/xhtml" xmlns:og="http://ogp.me/ns#" xmlns:fb="https://www.facebook.com/2008/fbml"> <!--<![endif]-->\\n<!-- head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# menuvegano: http://ogp.me/ns/fb/menuvegano#" -->\\n<meta http-equiv="content-type" content="text/html; charset=UTF-8">\\n    <meta charset="utf-8">\\n    <title>\', escape=False)\nresponse.write(response.meta.title or request.application)\nresponse.write(\'</title>\\n    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes">\\n    <meta name="description" content="\', escape=False)\nresponse.write(response.meta.description)\nresponse.write(\'">\\n    <meta name="keywords" content="\', escape=False)\nresponse.write(response.meta.keywords)\nresponse.write(\',vegan,vegetariano,vegano,vegana,vegetariana,saud\\xc3\\xa1vel,ecol\\xc3\\xb3gico, rede social, receita, receitas, receitas vegetarianas, receitas veganas, receitas vegan, nutri\\xc3\\xa7\\xc3\\xa3o vegetariana">\\n    <meta name="application-name" content="\', escape=False)\nresponse.write(request.application)\nresponse.write(\'" />\\n\\n    <meta property="og:site_name" content="menuvegano"/>\\n    <meta property="fb:admins" content="1766038844,100000008584617"/>\\n\\n  <meta property="fb:app_id" content="213390132110106" /> \\n  <meta property="og:type"   content="\', escape=False)\nresponse.write(response.meta.og_type)\nresponse.write(\'" /> \\n  <meta property="og:url"    content="\', escape=False)\nresponse.write(response.meta.og_url)\nresponse.write(\'" /> \\n  <meta property="og:title"  content="\', escape=False)\nresponse.write(response.meta.title)\nresponse.write(\'" />\\n  <meta property="og:description"  content="\', escape=False)\nresponse.write(response.meta.description)\nresponse.write(\'" />\\n  \\n  \', escape=False)\nresponse.meta.og_images.append(URL(\'static\',\'menu\',args=\'logo.gif\', host=True, scheme=True))\nresponse.write(\'\\n  \', escape=False)\nfor og_image in response.meta.og_images:\n    response.write(\' \\n      <meta property="og:image"  content="\', escape=False)\n    response.write(og_image)\n    response.write(\'" /> \\n  \', escape=False)\n    pass\nresponse.write(\'\\n  \\n\\n    <!-- Le HTML5 shim, for IE6-8 support of HTML elements -->\\n    <!--[if lt IE 9]>\\n      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>\\n    <![endif]-->\\n\\n    <!-- Le styles -->\\n    \\n    <link href="\', escape=False)\nresponse.write(URL(\'static\',\'menu/css\', args=\'bootstrap.css\'))\nresponse.write(\'" rel="stylesheet">\\n    <link href="\', escape=False)\nresponse.write(URL(\'static\',\'menu/css\', args=\'font-awesome.css\'))\nresponse.write(\'" rel="stylesheet">\\n    <link href="\', escape=False)\nresponse.write(URL(\'static\',\'menu/css\', args=\'movuca.css\'))\nresponse.write(\'" rel="stylesheet">\\n    <style type="text/css">\\n      body {\\n        padding-top: 40px;\\n        padding-bottom: 40px;\\n      }\\n      .sidebar-nav {\\n        padding: 9px 0;\\n      }\\n    </style>\\n    <!-- link href="\', escape=False)\nresponse.write(URL(\'static\',\'menu/css\', args=\'bootstrap-responsive.css\'))\nresponse.write(\'" rel="stylesheet" -->\\n    <link href="\', escape=False)\nresponse.write(URL(\'static\',\'menu/css\', args=\'calendar.css\'))\nresponse.write(\'" rel="stylesheet">\\n    <link href="\', escape=False)\nresponse.write(URL(\'static\',\'menu/css\', args=\'custom-theme/jquery-ui-1.8.16.custom.css\'))\nresponse.write(\'" rel="stylesheet">\\n    <link href="\', escape=False)\nresponse.write(URL(\'static\',\'menu/css\', args=\'jquery.tagit.css\'))\nresponse.write(\'" rel="stylesheet">\\n    <link href="\', escape=False)\nresponse.write(URL(\'static\',\'css\', args=\'zocial.css\'))\nresponse.write(\'" rel="stylesheet">\\n    \\n    <!-- Le fav and touch icons -->\\n    <link rel="shortcut icon" href="\', escape=False)\nresponse.write(URL(\'static\',\'menu/favicon.gif\'))\nresponse.write(\'" type="image/x-icon">\\n\\n  \\n    <!-- Le javascript\\n    ================================================== -->\\n    <script type="text/javascript">\\n    var notification_btn = "\', escape=False)\nresponse.write(T(\'Close and mark all as read\'))\nresponse.write(\'"\\n    </script>\\n    <!-- Placed at the end of the document so the pages load faster -->\\n    <script src="\', escape=False)\nresponse.write(URL(\'static\', \'menu/js\'))\nresponse.write(\'/jquery.js"></script>\\n    <script src="\', escape=False)\nresponse.write(URL(\'static\', \'menu/js\'))\nresponse.write(\'/jquery.fitvids.js"></script>\\n    <script src="\', escape=False)\nresponse.write(URL(\'static\', \'menu/js\'))\nresponse.write(\'/bootstrap-transition.js"></script>\\n    <script src="\', escape=False)\nresponse.write(URL(\'static\', \'menu/js\'))\nresponse.write(\'/bootstrap-alert.js"></script>\\n    <script src="\', escape=False)\nresponse.write(URL(\'static\', \'menu/js\'))\nresponse.write(\'/bootstrap-modal.js"></script>\\n    <script src="\', escape=False)\nresponse.write(URL(\'static\', \'menu/js\'))\nresponse.write(\'/bootstrap-dropdown.js"></script>\\n    <!--script src="\', escape=False)\nresponse.write(URL(\'static\', \'menu/js\'))\nresponse.write(\'/bootstrap-scrollspy.js"></script -->\\n    <script src="\', escape=False)\nresponse.write(URL(\'static\', \'menu/js\'))\nresponse.write(\'/bootstrap-tab.js"></script>\\n    <script src="\', escape=False)\nresponse.write(URL(\'static\', \'menu/js\'))\nresponse.write(\'/bootstrap-tooltip.js"></script>\\n    <script src="\', escape=False)\nresponse.write(URL(\'static\', \'menu/js\'))\nresponse.write(\'/bootstrap-popover.js"></script>\\n    <script src="\', escape=False)\nresponse.write(URL(\'static\', \'menu/js\'))\nresponse.write(\'/bootstrap-button.js"></script>\\n    <script src="\', escape=False)\nresponse.write(URL(\'static\', \'menu/js\'))\nresponse.write(\'/bootstrap-collapse.js"></script>\\n    <script src="\', escape=False)\nresponse.write(URL(\'static\', \'menu/js\'))\nresponse.write(\'/bootstrap-carousel.js"></script>\\n    <script src="\', escape=False)\nresponse.write(URL(\'static\', \'menu/js\'))\nresponse.write(\'/bootstrap-typeahead.js"></script>\\n    <script src="\', escape=False)\nresponse.write(URL(\'static\', \'menu/js\'))\nresponse.write(\'/calendar.js"></script>\\n    <script src="\', escape=False)\nresponse.write(URL(\'static\', \'menu/js\'))\nresponse.write(\'/jquery-ui-1.8.17.custom.min.js"></script>\\n    <script src="\', escape=False)\nresponse.write(URL(\'static\', \'menu/js\'))\nresponse.write(\'/web2py.js"></script>\\n    <script src="\', escape=False)\nresponse.write(URL(\'static\', \'menu/js\'))\nresponse.write(\'/bootstrap.js"></script>\\n    <script src="\', escape=False)\nresponse.write(URL(\'static\', \'menu/js\'))\nresponse.write(\'/tag-it.js"></script>\\n    \', escape=False)\nresponse.write(\'<script type="text/javascript"><!--\\n    // These variables are used by the web2py_ajax_init function in web2py_ajax.js (which is loaded below).\\n    var w2p_ajax_confirm_message = "\', escape=False)\nresponse.write(T(\'Are you sure you want to delete this object?\'))\nresponse.write(\'";\\n    var w2p_ajax_date_format = "\', escape=False)\nresponse.write(T(\'%Y-%m-%d\'))\nresponse.write(\'";\\n    var w2p_ajax_datetime_format = "\', escape=False)\nresponse.write(T(\'%Y-%m-%d %H:%M:%S\'))\nresponse.write(\'";\\n    //--></script>\\n\', escape=False)\n#response.files.insert(0,URL(\'static\',\'js/jquery.js\'))\n#response.files.insert(1,URL(\'static\',\'css/calendar.css\'))\n#response.files.insert(2,URL(\'static\',\'js/calendar.js\'))\n#response.files.insert(3,URL(\'static\',\'js/web2py.js\'))\n#response.include_meta()\nresponse.include_files()\nresponse.write(\'\\n\', escape=False)\nresponse.write(\'\\n\\n    <script type="text/javascript" src="//assets.pinterest.com/js/pinit.js"></script>\\n    <script type="text/javascript">\\n\\n    \', escape=False)\nif session.auth and session.auth.user:\n    response.write(\'\\n    $(document).ready(function () {\\n       ajax($("#notification-dialog").attr("data-counter-url"),[],"notification-counter");\\n    });\\n\\n    (function poll(){\\n       setTimeout(function(){\\n          ajax($("#notification-dialog").attr("data-counter-url"),[],"notification-counter");\\n          poll();\\n      }, 30000);\\n    })();\\n    \', escape=False)\n    pass\nresponse.write(\'\\n  </script>\\n\\n   \', escape=False)\n# using sidebars need to know what sidebar you want to use\nleft_sidebar_enabled = globals().get(\'left_sidebar_enabled\',False)\nright_sidebar_enabled = globals().get(\'right_sidebar_enabled\',False)\nmiddle_columns = {0:\'span12\',1:\'\',2:\'span9\'}[\n(left_sidebar_enabled and 1 or 0)+(right_sidebar_enabled and 1 or 0)]\nheader_enabled = globals().get(\'header_enabled\',False)\ntoparea_enabled = globals().get(\'toparea_enabled\',False)\nleftlogo_enabled = globals().get(\'leftlogo_enabled\',False)\nresponse.write(\'\\n\\n\\n\', escape=False)\nif request.controller in [\'article\'] and request.function in [\'show\', \'edit\']:\n    response.write(\'\\n<link type="text/css" rel="stylesheet" href="\', escape=False)\n    response.write(URL(\'static\',\'plugin_ckeditor\'))\n    response.write(\'/plugins/insertcode/styles/prettify.css"/>\\n<script type="text/javascript" src="\', escape=False)\n    response.write(URL(\'static\',\'plugin_ckeditor\'))\n    response.write(\'/plugins/insertcode/styles/prettify.js"></script>\\n\\n\\n\\n<script type="text/javascript">\\njQuery(function() {\\n   prettyPrint();\\n});\\n\\n</script>\\n\', escape=False)\n    pass\nresponse.write(\'\\n <link href=\\\'http://fonts.googleapis.com/css?family=Great+Vibes\\\' rel=\\\'stylesheet\\\' type=\\\'text/css\\\'> \\n<script type="text/javascript">\\n\\n  var _gaq = _gaq || [];\\n  _gaq.push([\\\'_setAccount\\\', \\\'UA-32600759-1\\\']);\\n  _gaq.push([\\\'_setDomainName\\\', \\\'menuvegano.com.br\\\']);\\n  _gaq.push([\\\'_setAllowLinker\\\', true]);\\n  _gaq.push([\\\'_trackPageview\\\']);\\n\\n  (function() {\\n    var ga = document.createElement(\\\'script\\\'); ga.type = \\\'text/javascript\\\'; ga.async = true;\\n    ga.src = (\\\'https:\\\' == document.location.protocol ? \\\'https://ssl\\\' : \\\'http://www\\\') + \\\'.google-analytics.com/ga.js\\\';\\n    var s = document.getElementsByTagName(\\\'script\\\')[0]; s.parentNode.insertBefore(ga, s);\\n  })();\\n\\n</script>\\n\\n  <script type="text/javascript">\\n  // var uvOptions = {};\\n  // (function() {\\n  //   var uv = document.createElement(\\\'script\\\'); uv.type = \\\'text/javascript\\\'; uv.async = true;\\n  //   uv.src = (\\\'https:\\\' == document.location.protocol ? \\\'https://\\\' : \\\'http://\\\') + \\\'widget.uservoice.com/xI7XaFvYY317GCzbHNxDQ.js\\\';\\n  //   var s = document.getElementsByTagName(\\\'script\\\')[0]; s.parentNode.insertBefore(uv, s);\\n  // })();\\n\\nvar _ues = {\\nhost:\\\'movuca.userecho.com\\\',\\nforum:\\\'10714\\\',\\ncategory:null,\\nlang:\\\'en\\\',\\ntab_corner_radius:6,\\ntab_font_size:16,\\ntab_image_hash:\\\'RmVlZGJhY2s%3D\\\',\\ntab_alignment:\\\'right\\\',\\ntab_text_color:\\\'#FFFFFF\\\',\\ntab_bg_color:\\\'#080707\\\',\\ntab_hover_color:\\\'#857D7D\\\'\\n};\\n\\n(function() {\\n    var _ue = document.createElement(\\\'script\\\'); _ue.type = \\\'text/javascript\\\'; _ue.async = true;\\n    _ue.src = (\\\'https:\\\' == document.location.protocol ? \\\'https://s3.amazonaws.com/\\\' : \\\'http://\\\') + \\\'cdn.userecho.com/js/widget-1.4.gz.js\\\';\\n    var s = document.getElementsByTagName(\\\'script\\\')[0]; s.parentNode.insertBefore(_ue, s);\\n  })();\\n\\n</script>\\n  </head>\\n\\n  <body>\\n\\n    <div id="notification-dialog" title="\', escape=False)\nresponse.write(T(\'Notifications\'))\nresponse.write(\'" data-url="\', escape=False)\nresponse.write(URL(\'notification\',\'list_latest.load\'))\nresponse.write(\'" data-mark-url="\', escape=False)\nresponse.write(URL(\'notification\',\'mark_as_read\'))\nresponse.write(\'" data-counter-url="\', escape=False)\nresponse.write(URL(\'notification\',\'count\'))\nresponse.write(\'"></div>\\n\\n<!--\\n<div id="fb-root"></div>\\n<script>(function(d, s, id) {\\n  var js, fjs = d.getElementsByTagName(s)[0];\\n  if (d.getElementById(id)) return;\\n  js = d.createElement(s); js.id = id;\\n  js.src = "//connect.facebook.net/pt_BR/all.js#xfbml=1&appId=213390132110106";\\n  fjs.parentNode.insertBefore(js, fjs);\\n}(document, \\\'script\\\', \\\'facebook-jssdk\\\'));</script>\\n-->\\n\\n\\n\\n    <div class="navbar navbar-fixed-top">\\n      <div class="navbar-inner">\\n        <div class="container">\\n          <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\\n            <span class="icon-bar"></span>\\n            <span class="icon-bar"></span>\\n            <span class="icon-bar"></span>\\n          </a>\\n          <a class="brand" href="\', escape=False)\nresponse.write(URL(\'default\', \'home\'))\nresponse.write(\'" style="padding-bottom:0;padding-top:5px;">\\n\\n            <img src="\', escape=False)\nresponse.write(URL(\'static\', \'menu\', args=\'foxter.png\'))\nresponse.write(\'" style="max-height:30px;">\\n            \\n          </a>\\n          <div class="nav-collapse">\\n            <ul class="nav">\\n              <li><a href=\', escape=False)\nresponse.write(URL(\'home\', \'index\'))\nresponse.write(\'>Home</a></li>\\n\\n                <li class="dropdown" >\\n                  <a href="#" class="dropdown-toggle" data-toggle="dropdown">\\n                      \', escape=False)\nresponse.write(T(\'Categories\'))\nresponse.write(\'<b class="caret"></b>\\n                  </a>\\n                  <ul class="dropdown-menu" style="min-width:500px;" styleold="overflow-y:auto;max-height:500px;">\\n                      \', escape=False)\nfor item in categories:\n    response.write(\'\\n                          <div style="float:left;height:100%;overflow-y:auto;max-height:500px;">\\n                           <li style="margin-left:10px;font-weight:bold;">\', escape=False)\n    response.write(item[\'content_type\'])\n    response.write(\'</li>\\n                           \', escape=False)\n    for category in item[\'categories\']:\n        response.write(\'\\n                            <li> <a class="" href="\', escape=False)\n        response.write(CURL(\'article\', \'list\', extension=False ,vars=dict(category=category[\'name\'], content_type_id=item[\'id\'])))\n        response.write(\'" data-url="\', escape=False)\n        response.write(CURL(\'article\', \'list\', extension=False, vars=dict(category=category[\'name\'], content_type_id=item[\'id\'])))\n        response.write(\'"><i class="i"></i> \', escape=False)\n        response.write(T(category[\'name\']))\n        response.write(\'</a></li>\\n                          \', escape=False)\n        pass\n    response.write(\'\\n                           <li> <a class="" href="\', escape=False)\n    response.write(CURL(\'article\', \'list\', extension=False ,vars=dict(content_type_id=item[\'id\'])))\n    response.write(\'" data-url="\', escape=False)\n    response.write(CURL(\'article\', \'list\', extension=False, vars=dict(content_type_id=item[\'id\'])))\n    response.write(\'"><i class="i"></i> \', escape=False)\n    response.write(T(\'View all\'))\n    response.write(\'</a></li>\\n                          <!-- <li class="divider"></li> -->\\n                       </div>\\n                      \', escape=False)\n    pass\nresponse.write(\'\\n                  </ul>\\n\\n                </li>\\n\\n \\n\\n              \', escape=False)\nif session.auth:\n    response.write(\'\\n              \', escape=False)\n    logout_url = CURL(\'person\', \'account\', args=\'logout\', extension=False)\n    if session.facebooklogin:\n        logout_url = CURL(\'person\', \'facebook\', args=\'logout\', extension=False)\n    elif session.googlelogin:\n        logout_url = CURL(\'person\', \'google\', args=\'logout\', extension=False)\n        pass\n    response.write(\'\\n                \\n                <li class="dropdown">\\n                  <a href="#" class="dropdown-toggle" data-toggle="dropdown">\\n                      \', escape=False)\n    response.write(T(\'Create\'))\n    response.write(\'<b class="caret"></b>\\n                  </a>\\n                  <ul class="dropdown-menu">\\n                      \', escape=False)\n    for content_type in content_types:\n        response.write(\'\\n                          <li>\', escape=False)\n        response.write(A(T(content_type.title), _href=CURL(\'article\', \'new\', extension=False, args=content_type.identifier)))\n        response.write(\'</li>\\n                      \', escape=False)\n        pass\n    response.write(\' \\n                      <li class="divider"></li>\\n                      <li>\', escape=False)\n    response.write(A(T(\'Status update\'), _href=CURL(\'person\', \'board\', extension=False)))\n    response.write(\'</li>\\n<!--                       <li class="divider"></li>\\n                      <li>\', escape=False)\n    response.write(A(T(\'Group\'), _href=CURL(\'group\', \'new\')))\n    response.write(\'</li>\\n                      <li>\', escape=False)\n    response.write(A(T(\'Page\'), _href=CURL(\'page\', \'new\')))\n    response.write(\'</li>\\n                      <li class="divider"></li>\\n                      <li>\', escape=False)\n    response.write(A(T(\'Photo Gallery\'), _href=CURL(\'gallery\', \'new\')))\n    response.write(\'</li>\\n                      <li>\', escape=False)\n    response.write(A(T(\'Bundle\'), _href=CURL(\'bundle\', \'new\')))\n    response.write(\'</li> -->\\n                  </ul>\\n                </li>\\n                <li class="dropdown">\\n                  <a href="#" class="dropdown-toggle" data-toggle="dropdown">\\n                      \', escape=False)\n    response.write(T(\'Explore\'))\n    response.write(\'<b class="caret"></b>\\n                  </a>\\n                  <ul class="dropdown-menu">\\n                      <li>\', escape=False)\n    response.write(A(T(\'Find articles\'), _href=CURL(\'article\', \'search\', extension=False)))\n    response.write(\'</li>\\n                      <li>\', escape=False)\n    response.write(A(T(\'Find members\'), _href=CURL(\'person\', \'search\', extension=False)))\n    response.write(\'</li>\\n                      <li class="divider"></li>\\n                      <li>\', escape=False)\n    response.write(A(T(\'All articles\'), _href=CURL(\'article\', \'list\', extension=False)))\n    response.write(\'</li>\\n                      <li>\', escape=False)\n    response.write(A(T(\'All members\'), _href=CURL(\'person\', \'search\', extension=False, vars=dict(q=\'@\'))))\n    response.write(\'</li>\\n                      <li class="divider"></li>\\n                      <!-- li>\\n                        <a target="_blank" href="http://feeds.feedburner.com/menuvegano">\\n                         <i class="icon-signal"></i>RSS\\n                        </a>\\n                      </li -->\\n                  </ul>\\n                </li>\\n                <li class="dropdown">\\n                  <a href="#" class="dropdown-toggle" data-toggle="dropdown">\\n                      \', escape=False)\n    response.write(T(\'Me\'))\n    response.write(\'<b class="caret"></b>\\n                  </a>\\n                  <ul class="dropdown-menu">\\n                      <li>\', escape=False)\n    response.write(A(T(\'My profile\'), _href=CURL(\'person\', \'show\', extension=False)))\n    response.write(\'</li>\\n                      <li>\', escape=False)\n    response.write(A(T(\'My settings\'), _href=CURL(\'person\', \'account\', args=\'profile\', extension=False)))\n    response.write(\'</li>\\n                      <li class="divider"></li>\\n                      <li>\', escape=False)\n    response.write(A(T(\'My articles\'), _href=CURL(\'article\', \'list\', extension=False, vars={\'author\': session.auth.user.id})))\n    response.write(\'</li>\\n                      <li>\', escape=False)\n    response.write(A(T(\'My favorites\'), _href=CURL(\'article\', \'list\', extension=False, vars={\'favorite\': session.auth.user.id})))\n    response.write(\'</li>\\n                      <li>\', escape=False)\n    response.write(A(T(\'My likes\'), _href=CURL(\'article\', \'list\', extension=False, vars={\'like\': session.auth.user.id})))\n    response.write(\'</li>\\n                      <li>\', escape=False)\n    response.write(A(T(\'My subscription\'), _href=CURL(\'article\', \'list\', extension=False, vars={\'subscribe\': session.auth.user.id})))\n    response.write(\'</li>\\n                      <!-- li>\', escape=False)\n    response.write(A(T(\'My Cook Book\'), _href=CURL(\'cookrecipe\', \'book\', extension=False, args=session.auth.user.id)))\n    response.write(\'</li -->\\n                      <li>\', escape=False)\n    response.write(A(T(\'My drafts\'), _href=CURL(\'article\', \'list\', extension=False, vars={\'draft\': "true"})))\n    response.write(\'</li>\\n                      <li>\', escape=False)\n    response.write(A(T(\'My contacts\'), _href=CURL(\'person\', \'contacts\', extension=False)))\n    response.write(\'</li>\\n                       <li class="divider"></li>\\n                      <li>\', escape=False)\n    response.write(A(T(\'Logout\'), _href=logout_url))\n    response.write(\'</li>\\n                     \\n                  </ul>\\n                </li>\\n\\n                \', escape=False)\n    for item in get_menu(menus, 2):\n        response.write(\'\\n                \', escape=False)\n        submenu = get_menu(menus, 2, item.id)\n        response.write(\'\\n                <li class="\', escape=False)\n        response.write(\'dropdown\' if submenu else \'\')\n        response.write(\' logged-in-menu">\\n                  <a href="\', escape=False)\n        response.write(get_menu_link(item))\n        response.write(\'" class="dropdown-toggle" data-toggle="dropdown">\\n                      \', escape=False)\n        response.write(T(item.title))\n        if submenu:\n            response.write(\'<b class="caret"></b>\', escape=False)\n            pass\n        response.write(\'\\n                  </a>\\n                  \\n                  \', escape=False)\n        if submenu:\n            response.write(\'\\n                  <ul class="dropdown-menu">\\n                      \', escape=False)\n            for subitem in submenu:\n                response.write(\'\\n                      <li>\', escape=False)\n                response.write(A(T(subitem.title), _href=get_menu_link(subitem)))\n                response.write(\'</li>\\n                      \', escape=False)\n                pass\n            response.write(\'\\n                  </ul>\\n                  \', escape=False)\n            pass\n        response.write(\'\\n                </li>\\n                \', escape=False)\n        pass\n    response.write(\'   \\n\\n              \', escape=False)\n    if \'admin\' in session.auth.user_groups.values():\n        response.write(\'   \\n                \', escape=False)\n        for item in get_menu(menus, 3):\n            response.write(\'\\n                \', escape=False)\n            submenu = get_menu(menus, 3, item.id)\n            response.write(\'\\n                <li class="\', escape=False)\n            response.write(\'dropdown\' if submenu else \'\')\n            response.write(\' admin-menu">\\n                  <a href="\', escape=False)\n            response.write(get_menu_link(item))\n            response.write(\'" class="dropdown-toggle" data-toggle="dropdown">\\n                      \', escape=False)\n            response.write(T(item.title))\n            if submenu:\n                response.write(\'<b class="caret"></b>\', escape=False)\n                pass\n            response.write(\'\\n                  </a>\\n                  \\n                  \', escape=False)\n            if submenu:\n                response.write(\'\\n                  <ul class="dropdown-menu">\\n                      \', escape=False)\n                for subitem in submenu:\n                    response.write(\'\\n                      <li>\', escape=False)\n                    response.write(A(T(subitem.title), _href=get_menu_link(subitem)))\n                    response.write(\'</li>\\n                      \', escape=False)\n                    pass\n                response.write(\'\\n                  </ul>\\n                  \', escape=False)\n                pass\n            response.write(\'\\n                </li>\\n                \', escape=False)\n            pass\n        response.write(\'\\n              \', escape=False)\n        pass\n    response.write(\'   \\n\\n                <li><a href="#notification" id="notification-opener" title="\', escape=False)\n    response.write(T(\'notifications\'))\n    response.write(\'"><i class="icon-white icon-exclamation-sign"></i> (<span id="notification-counter"></span>)</a></li>\\n                \\n              \', escape=False)\nelse:\n    response.write(\'\\n                <li><a href="\', escape=False)\n    response.write(CURL(\'person\', \'account\', args=\'login\', extension=False))\n    response.write(\'">\', escape=False)\n    response.write(T("Login"))\n    response.write(\'</a></li>\\n                <li><a href="\', escape=False)\n    response.write(CURL(\'person\', \'account\', args=\'register\', extension=False))\n    response.write(\'">\', escape=False)\n    response.write(T("Register"))\n    response.write(\'</a></li>\\n\\n                \', escape=False)\n    for item in get_menu(menus, 1):\n        response.write(\'\\n                \', escape=False)\n        submenu = get_menu(menus, 1, item.id)\n        response.write(\'\\n                <li class="\', escape=False)\n        response.write(\'dropdown\' if submenu else \'\')\n        response.write(\' logged-out-menu">\\n                  <a href="\', escape=False)\n        response.write(get_menu_link(item))\n        response.write(\'" class="dropdown-toggle" data-toggle="dropdown">\\n                      \', escape=False)\n        response.write(T(item.title))\n        if submenu:\n            response.write(\'<b class="caret"></b>\', escape=False)\n            pass\n        response.write(\'\\n                  </a>\\n                  \\n                  \', escape=False)\n        if submenu:\n            response.write(\'\\n                  <ul class="dropdown-menu">\\n                      \', escape=False)\n            for subitem in submenu:\n                response.write(\'\\n                      <li>\', escape=False)\n                response.write(A(T(subitem.title), _href=get_menu_link(subitem)))\n                response.write(\'</li>\\n                      \', escape=False)\n                pass\n            response.write(\'\\n                  </ul>\\n                  \', escape=False)\n            pass\n        response.write(\'\\n                </li>\\n                \', escape=False)\n        pass\n    response.write(\'  \\n\\n              \', escape=False)\n    pass\nresponse.write(\'\\n\\n                \', escape=False)\nfor item in get_menu(menus, 4):\n    response.write(\'\\n                \', escape=False)\n    submenu = get_menu(menus, 4, item.id)\n    response.write(\'\\n                <li class="\', escape=False)\n    response.write(\'dropdown\' if submenu else \'\')\n    response.write(\' logged-in-menu">\\n                  <a href="\', escape=False)\n    response.write(get_menu_link(item))\n    response.write(\'" class="dropdown-toggle" data-toggle="dropdown">\\n                      \', escape=False)\n    response.write(T(item.title))\n    if submenu:\n        response.write(\'<b class="caret"></b>\', escape=False)\n        pass\n    response.write(\'\\n                  </a>\\n                  \\n                  \', escape=False)\n    if submenu:\n        response.write(\'\\n                  <ul class="dropdown-menu">\\n                      \', escape=False)\n        for subitem in submenu:\n            response.write(\'\\n                      <li>\', escape=False)\n            response.write(A(T(subitem.title), _href=get_menu_link(subitem)))\n            response.write(\'</li>\\n                      \', escape=False)\n            pass\n        response.write(\'\\n                  </ul>\\n                  \', escape=False)\n        pass\n    response.write(\'\\n                </li>\\n                \', escape=False)\n    pass\nresponse.write(\'  \\n\\n            </ul>\\n                <form class="navbar-search pull-right" method="GET" action="\', escape=False)\nresponse.write(CURL(\'home\',\'search\', extension=False))\nresponse.write(\'">\\n                  <select style="display:none" name="kind" class="search-query span2" id="kind"><option value="article">\', escape=False)\nresponse.write(T("Articles"))\nresponse.write(\'</option><option value="user">\', escape=False)\nresponse.write(T("Users"))\nresponse.write(\'</option></select>\\n                  <input type="text" class="search-query" placeholder="\', escape=False)\nresponse.write(T(\'Type word or name to find\'))\nresponse.write(\'" name="q" id="q">\\n                  <input type="submit" class="search-query" value="\', escape=False)\nresponse.write(T(\'Search\'))\nresponse.write(\'">  \\n                </form>\\n          </div><!--/.nav-collapse -->\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n\\n\\n\\n\\n\\n\\n    <div class="container main">\\n   \\n      <div class="row-fluid">\\n        \\n        \', escape=False)\nif left_sidebar_enabled:\n    response.write(\'\\n\\n        <div class="span3 mobilehidden">\\n\\n        <!-- \', escape=False)\n    if leftlogo_enabled:\n        response.write(\'\\n           \', escape=False)\n        response.write(\'\\n           <div class="container top-header"> \\n               <div class="row-fluid logobar">\\n                  <div class="span3 mobilehidden logodiv">\\n                     <a href="\', escape=False)\n        response.write(CURL("home","index", extension=False))\n        response.write(\'"><img src="\', escape=False)\n        response.write(URL(\'static\',\'menu\', extension=False,args=\'logo.png\'))\n        response.write(\'"></a>\\n                  </div>\\n                </div>\\n          </div>\\n           \', escape=False)\n        response.write(\'\\n        \', escape=False)\n        pass\n    response.write(\' -->\\n\\n          \', escape=False)\n    response.write(\'\\n          \', escape=False)\n    if session.auth:\n        response.write(\'\\n          <div class="well sidebar-nav">\\n          <div style="margin:20px;"> \\n            <ul class="thumbnails">\\n              <li class="span4">\\n                <a class="thumbnail" href="\', escape=False)\n        response.write(CURL(\'person\', \'show\', args=session.auth.user.nickname, extension=False))\n        response.write(\'">\\n                  \', escape=False)\n        response.write(IMG(_src=get_image(None, \'user\', themename=\'menu\', user=session.auth.user)))\n        response.write(\'\\n                </a>\\n                \', escape=False)\n        response.write(A(session.auth.user.nickname, _href=CURL(\'person\', \'show\', extension=False, args=session.auth.user.nickname)))\n        response.write(\'\\n              </li>\\n            </ul> \\n          </div>\\n\\n            <ul class="nav nav-list">\\n              <li class="nav-header">\', escape=False)\n        response.write(T(\'Create\'))\n        response.write(\'</li>\\n              <!-- <li class="active"><a href="#"><i class="icon-star"></i> Home</a></li> -->\\n              \', escape=False)\n        for content_type in content_types:\n            response.write(\'\\n                  <li>\', escape=False)\n            response.write(A(iicon(\'list-alt\'), T(content_type.title), _href=CURL(\'article\', \'new\', extension=False, args=content_type.identifier)))\n            response.write(\'</li>\\n              \', escape=False)\n            pass\n        response.write(\'\\n              <li>\', escape=False)\n        response.write(A(iicon(\'comment\'), T(\'Status update\'), _href=CURL(\'person\', \'board\', extension=False)))\n        response.write(\'</li>\\n          <!--<li>\', escape=False)\n        response.write(A(iicon(\'list-alt\'), T(\'Group\'), _href=CURL(\'group\', \'new\')))\n        response.write(\'</li>\\n              <li>\', escape=False)\n        response.write(A(iicon(\'list-alt\'), T(\'Page\'), _href=CURL(\'page\', \'new\')))\n        response.write(\'</li>\\n              <li>\', escape=False)\n        response.write(A(iicon(\'list-alt\'), T(\'Photo Gallery\'), _href=CURL(\'gallery\', \'new\')))\n        response.write(\'</li>\\n              <li>\', escape=False)\n        response.write(A(iicon(\'list-alt\'), T(\'Bundle\'), _href=CURL(\'bundle\', \'new\')))\n        response.write(\'</li> -->\\n              <li class="nav-header">\', escape=False)\n        response.write(T(\'Explore\'))\n        response.write(\'</li>\\n              <li>\', escape=False)\n        response.write(A(iicon(\'search\'), T(\'Find articles\'), _href=CURL(\'article\', \'search\', extension=False)))\n        response.write(\'</li>\\n              <li>\', escape=False)\n        response.write(A(iicon(\'user\'), T(\'Find members\'), _href=CURL(\'person\', \'search\', extension=False)))\n        response.write(\'</li>\\n              <li>\', escape=False)\n        response.write(A(iicon(\'list\'), T(\'All articles\'), _href=CURL(\'article\', \'list\', extension=False)))\n        response.write(\'</li>\\n              <li>\', escape=False)\n        response.write(A(iicon(\'th\'), T(\'All members\'), _href=CURL(\'person\', \'search\', extension=False, vars=dict(q=\'@\'))))\n        response.write(\'</li>\\n              <li class="nav-header">\', escape=False)\n        response.write(T(\'Me\'))\n        response.write(\'</li>\\n              <li>\', escape=False)\n        response.write(A(iicon(\'th-large\'), T(\'My profile\'), _href=CURL(\'person\', \'show\', extension=False)))\n        response.write(\'</li>\\n              <li>\', escape=False)\n        response.write(A(iicon(\'cogs\'), T(\'My settings\'), _href=CURL(\'person\', \'account\', extension=False, args=\'profile\')))\n        response.write(\'</li>\\n              <li>\', escape=False)\n        response.write(A(iicon(\'list-alt\'), T(\'My articles (%s)\', session.auth.user.articles), _href=CURL(\'article\', \'list\', extension=False, vars={\'author\': session.auth.user.id})))\n        response.write(\'</li>\\n              <!-- li>\', escape=False)\n        response.write(A(iicon(\'book\'), T(\'My Cook Book\'), _href=CURL(\'cookrecipe\', \'book\', extension=False, args=session.auth.user.id)))\n        response.write(\'</li -->\\n              <li>\', escape=False)\n        response.write(A(iicon(\'pencil\'), T(\'My drafts (%s)\', session.auth.user.draft_articles), _href=CURL(\'article\', \'list\', extension=False, vars={\'draft\': "true"})))\n        response.write(\'</li>\\n              <li>\', escape=False)\n        response.write(A(iicon(\'user\'), T(\'My contacts (%s)\', session.auth.user.contacts), _href=CURL(\'person\', \'contacts\', extension=False)))\n        response.write(\'</li>\\n              <li>\', escape=False)\n        response.write(A(iicon(\'signout\'), T(\'Logout\'), _href=logout_url))\n        response.write(\'</li>\\n            </ul>\\n          </div><!--/.well -->\\n            \', escape=False)\n    else:\n        response.write(\'\\n            <div class="well sidebar-nav ">\\n           <div>\\n             <img width="50" style="margin-left:15px;float:left;margin-right:10px;" src="\', escape=False)\n        response.write(URL(\'static\', \'menu\', extension=False, args=[\'images\',\'kitchen\',\'f.gif\']))\n        response.write(\'">\\n\\n\\n\\n             <h3>\', escape=False)\n        response.write(T("Welcome"))\n        response.write(\'</h3>\\n             <p>\\n               <a href="\', escape=False)\n        response.write(CURL(\'person\', \'account\', args=\'register\', extension=False))\n        response.write(\'">\\n                \', escape=False)\n        response.write(XML(T("Publica tu contenido gratis")))\n        response.write(\'\\n                 \\n               </a>\\n\\n             </p> \\n            </div>\\n            <ul id="usersidebar" class="nav nav-list">\\n              <li class="nav-header">\', escape=False)\n        response.write(T("Connect!"))\n        response.write(\'</li>\\n              <li>\\n                  <div>\\n                        \\n                     <form action="\', escape=False)\n        response.write(URL(\'person\', \'loginbare\', extension=False))\n        response.write(\'" method="post">\\n                         \', escape=False)\n        if \'loginerror\' in request.args:\n            response.write(\'\\n                            <label style="color:red;">\', escape=False)\n            response.write(T("Username or password incorrect"))\n            response.write(\'</label>\\n                         \', escape=False)\n            pass\n        response.write(\'\\n                         <div class="input-prepend">\\n                         <span class="add-on"><i class="icon-envelope"></i></span>\\n                         <input required=\\\'required\\\' type="text" name="email" id="email" placeholder="\', escape=False)\n        response.write(T(\'your email\'))\n        response.write(\'" \', escape=False)\n        response.write("value=%s" % request.args(0) if request.args(1) == \'loginerror\' else \'\')\n        response.write(\'  style="width:70%"/>\\n                         </div>\\n                         <div class="input-prepend">\\n                         <span class="add-on"><i class="icon-lock"></i></span>\\n                         <input required=\\\'required\\\' type="password" name="password" id="password" placeholder="\', escape=False)\n        response.write(T(\'your password\'))\n        response.write(\'"  style="width:70%"/>\\n                         </div>\\n                         <button class="btn">\', escape=False)\n        response.write(T("Go"))\n        response.write(\'</button> \\n\\n                     </form>\\n                  </div>\\n              </li>\\n              <li><a href="\', escape=False)\n        response.write(CURL(\'person\', \'account\', extension=False, args=\'request_reset_password\'))\n        response.write(\'"><i class="icon-key"></i>\', escape=False)\n        response.write(T("Lost password"))\n        response.write(\'</a></li>\\n              <li class=""><a href="\', escape=False)\n        response.write(CURL(\'person\', \'account\', extension=False, args=\'register\'))\n        response.write(\'"><i class="icon-user"></i>\', escape=False)\n        response.write(T("Create your account"))\n        response.write(\'</a></li>\\n            </ul>\\n          </div><!--/.well -->             \\n            \', escape=False)\n        pass\n    response.write(\'\\n\\n            <div class="fb-like-box" data-href="http://www.facebook.com/menuvegano" data-width="216" data-show-faces="true" data-stream="false" data-header="false" data-border-color="#ffffff"></div>\\n            \\n            <div class="fb-activity" data-site="menuvegano.com.br" data-app-id="213390132110106" data-width="216" data-height="370" data-header="false" data-border-color="#ffffff" data-recommendations="false"></div>\\n          \', escape=False)\n    response.write(\'\\n        </div><!--/span-->\\n        \', escape=False)\n    pass\nresponse.write(\'\\n        \\n        \', escape=False)\nmaster_columns = "span12" if not any([left_sidebar_enabled,right_sidebar_enabled]) else \'span9\'\nresponse.write(\'\\n        \\n\\n\\n        <div class="\', escape=False)\nresponse.write(master_columns)\nresponse.write(\' master_content"> <!--master-->\\n\\n      \', escape=False)\nif header_enabled:\n    response.write(\'\\n         \', escape=False)\n    response.write(\'  \\n          <div class="hero-unit">\\n            <h1>Hello, world!</h1>\\n            <p>This is a template for a simple marketing or \\ninformational website. It includes a large callout called the hero unit \\nand three supporting pieces of content. Use it as a starting point to \\ncreate something more unique.</p>\\n            <p><a class="btn btn-primary btn-large">Learn more \\xc2\\xbb</a></p>\\n          </div>\\n         \', escape=False)\n    response.write(\'\\n      \', escape=False)\n    pass\nresponse.write(\'\\n\\n\\n          <div class="row-fluid">\\n\\n            <div class="\', escape=False)\nresponse.write(middle_columns)\nresponse.write(\'">\\n\\n            \', escape=False)\nif alerts:\n    response.write(\'\\n            <div class="fade in alert alert-info">\\n                <a class="close" data-dismiss="alert" href="#">&times;</a>\\n                \', escape=False)\n    for alert in alerts:\n        response.write(\'\\n                <p>\', escape=False)\n        response.write(alert)\n        response.write(\'</p>\\n                \', escape=False)\n        pass\n    response.write(\'\\n            </div>\\n            \', escape=False)\n    pass\nresponse.write(\'\\n  \\n            \', escape=False)\nresponse.write(\'\\n              \', escape=False)\nresponse.write(\'\\n\\n\', escape=False)\ndef eventbox(event):\n    response.write(\'\\n<li class="timeline-item row well" style="padding-top:5px;margin:10px 0;" id="event_\', escape=False)\n    response.write(event.id)\n    response.write(\'">\\n\\n    \', escape=False)\n    if session.auth and (session.auth.user.id in [event.created_by]):\n        response.write(\'\\n    <a class="close removeevent" data-url="\', escape=False)\n        response.write(URL(\'person\', \'removeevent\', args=event.id, extension=False))\n        response.write(\'">&times;</a>\\n    \', escape=False)\n        pass\n    response.write(\'\\n   <div class="row">\\n\\t<div class="span1" style="margin-right:0;">\\n\\t    <a href="\', escape=False)\n    response.write(event_info[event.event_type][\'url\'])\n    response.write(\'/\', escape=False)\n    response.write(event.event_link)\n    response.write(\'" title="\', escape=False)\n    response.write(event.nickname)\n    response.write(\'"><img  src="\', escape=False)\n    response.write(event.event_image)\n    response.write(\'" style="max-height:50px;"></a>\\n\\t</div>\\n\\t<div class="span9 timeline-text" style="font-size:14px;line-height:14px;padding:0px;">\\n\\n\\n\\t    <a href="\', escape=False)\n    response.write(event_info[event.event_type][\'url\'])\n    response.write(\'/\', escape=False)\n    response.write(event.event_link)\n    response.write(\'"><strong>\', escape=False)\n    response.write(event.nickname)\n    response.write(\'</strong></a>\\n\\n        \', escape=False)\n    if event.event_link_to:\n        response.write(\'\\n            <a style="text-decoration:none;color:#000;" href="\', escape=False)\n        response.write(event_info[event.event_type][\'url_to\'])\n        response.write(\'/\', escape=False)\n        response.write(event.event_link_to)\n        response.write(\'">\\n\\t            \', escape=False)\n        response.write(event_info[event.event_type][\'title\'] % event)\n        response.write(\'\\n\\t        </a>\\n\\t    \', escape=False)\n    else:\n        response.write(\'\\n                \', escape=False)\n        response.write(event_info[event.event_type][\'title\'] % event)\n        response.write(\'\\n\\t    \', escape=False)\n        pass\n    response.write(\'\\n\\t    \\n\\t    <p  onclick="window.location=\\\'\', escape=False)\n    response.write(event_info[event.event_type][\'url_to\'])\n    response.write(\'/\', escape=False)\n    response.write(event.event_link_to)\n    response.write(\'\\\'">\\n\\t    \', escape=False)\n    if \'iconclass\' in event_info[event.event_type]:\n        response.write(\'\\n            <i class="\', escape=False)\n        response.write(event_info[event.event_type][\'iconclass\'])\n        response.write(\'"></i>\\n\\t    \', escape=False)\n        pass\n    response.write(\'\\n\\t    \', escape=False)\n    response.write(XML(event.event_text))\n    response.write(\'\\n\\t    </p>\\n\\t</div>\\n\\t\', escape=False)\n    if event.event_image_to:\n        response.write(\'\\n\\t<div class="span1 omega" style="margin-left:0;">\\n\\t    <a href="\', escape=False)\n        response.write(event_info[event.event_type][\'url_to\'])\n        response.write(\'/\', escape=False)\n        response.write(event.event_link_to)\n        response.write(\'" title="\', escape=False)\n        response.write(event.event_to)\n        response.write(\'"><img src="\', escape=False)\n        response.write(event.event_image_to)\n        response.write(\'" style="max-height:50px;"></a>\\n\\t</div>\\n\\t\', escape=False)\n        pass\n    response.write(\'\\n  </div>\\n  <div class="row">\\n\\t<div class="span5" style="text-align:left;font-size:14px;line-height:14px;padding:0px;"><i class="icon-time"></i> \', escape=False)\n    response.write(pdate(event.created_on))\n    response.write(\'</div>\\n<!-- \\t<div class="span6" style="text-align:right;font-size:14px;line-height:14px;padding:0px;">\\n\\t    <a><i class="icon-share-alt"></i>\', escape=False)\n    response.write(T(\'reply\'))\n    response.write(\'</a> | <a><i class="icon-retweet"></i>\', escape=False)\n    response.write(T(\'repost\'))\n    response.write(\'</a> | <a><i class="icon-edit"></i>\', escape=False)\n    response.write(T(\'edit\'))\n    response.write(\'</a> &nbsp;&nbsp;\\n\\t</div> -->\\n  </div>\\n</li>\\n\', escape=False)\n    return\nresponse.write(\'\\n\', escape=False)\nresponse.write(\'\\n\\n<div class="alert" style="padding-top:5px;margin:5px 0;">\\n<h2>\', escape=False)\nresponse.write(T("Public timeline"))\nresponse.write(\'</h2>\\n&nbsp;\\n     <a href="\', escape=False)\nresponse.write(CURL(\'person\', \'publictimeline\', extension=\'rss\', vars=request.vars, args=request.args))\nresponse.write(\'" class="pull-right">\', escape=False)\nresponse.write(iicon(\'signal\'))\nresponse.write(T("RSS feed"))\nresponse.write(\'</a>\\n</div>  \\n\\n\\n\', escape=False)\nif events:\n    response.write(\'\\n<div class="row-fluid">\\n   <div class="span6">\\n    \', escape=False)\n    response.write(paginate_info)\n    response.write(\'\\n   </div> \\n   <div class="span6" style="text-align:right">\\n    \', escape=False)\n    response.write(paginate_selector)\n    response.write(\'\\n   </div>\\n</div> \\n\\n<ul class="timeline-wrapper" style="list-style: none;margin-left:0px;">\\n \', escape=False)\n    for event in events:\n        response.write(\'\\n    \', escape=False)\n        eventbox(event.user_timeline)\n        response.write(\'\\n \', escape=False)\n        pass\n    response.write(\'\\n</ul>\\n\\n<div class="span12 pagination pagination-centered" align="center">\\n  \', escape=False)\n    response.write(paginator)\n    response.write(\'\\n</div>\\n\\n<!--   <a href="\', escape=False)\n    response.write(CURL(\'person\',\'publictimeline\', extension=False,vars=dict(limitby=\'0,25\')))\n    response.write(\'">\', escape=False)\n    response.write(T("View all activities"))\n    response.write(\'</a> -->\\n\', escape=False)\nelse:\n    response.write(\'\\n  \', escape=False)\n    response.write(T("No events on this timeline"))\n    response.write(\'\\n\', escape=False)\n    pass\nresponse.write(\'\\n\', escape=False)\nresponse.write(\'\\n            \', escape=False)\nresponse.write(\'\\n            </div><!--/span-->\\n\\n            \', escape=False)\nif right_sidebar_enabled:\n    response.write(\'\\n            <div class="span3">\\n              \', escape=False)\n    response.write(\'\\n              <h3>Right Sidebar</h3>\\n              <p></p>\\n              \', escape=False)\n    response.write(\'\\n            </div><!--/span-->\\n            \', escape=False)\n    pass\nresponse.write(\'\\n             \\n          </div><!--/row-->\\n          \\n        </div><!--/span--><!--/master-->\\n      </div><!--/row-->\\n\\n      <hr>\\n      \\n      \', escape=False)\nresponse.write(\'\\n      <footer>\\n        <p>\\xc2\\xa9 foxter | 2012 \\n\\n        \', escape=False)\nif hasattr(T,\'get_possible_languages\'):\n    response.write(\'\\n         <span class="pull-right">\\n             <select name="adminlanguage" style="width:70px;margin-left:10px;"  onchange="var date = new Date();cookieDate=date.setTime(date.getTime()+(100*24*60*60*1000));document.cookie=\\\'siteLanguage=\\\'+this.options[this.selectedIndex].value+\\\'; expires=\\\'+cookieDate+\\\'; path=/\\\';window.location.reload()">\\n         \', escape=False)\n    for language in T.get_possible_languages():\n        response.write(\'\\n          <option \', escape=False)\n        response.write(T.accepted_language==language and \'selected\' or \'\')\n        response.write(\' >\', escape=False)\n        response.write(language)\n        response.write(\'</option>\\n         \', escape=False)\n        pass\n    response.write(\'\\n        </select>\\n       </span>\\n\', escape=False)\n    pass\nresponse.write(\'\\n\\n          <a target="_blank" class="zocial primary pull-right" href="http://www.web2py.com" style="margin-left:10px;"><span>web2py powered</span></a><a target="_blank" class="zocial paypal pull-right" href="https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=rochacbruno%40gmail%2ecom&lc=BR&item_name=web2pyslices&no_note=0&currency_code=BRL&bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHostedGuest"><span>Donate with Paypal</span></a>\\n\\n              \\n\\n               <a href="#myModal" role="button" class="btn" data-toggle="modal">que es foxter</a>\\n \\n<!-- Modal -->\\n<div id="myModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">\\n  <div class="modal-header">\\n    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">\\xc3\\x97</button>\\n    <h3 id="myModalLabel">Foxter</h3>\\n  </div>\\n  <div class="modal-body">\\n    \', escape=False)\nresponse.write(\'<p>\\n\\t<em><span style="color: rgb(51, 51, 51); font-family: \\\'Helvetica Neue\\\', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; background-color: rgb(255, 255, 255);">es una red social para compartir contenido online con otros usuarios, foxter te permite seguir las actividades de otros usuario,<strong> </strong>tener contactos &nbsp;y compartir tus conocimeentos en la red</span></em></p>\\n<p>\\n\\t<em><span style="background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: \\\'Helvetica Neue\\\', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px;">publica tu contenido gratis:</span></em></p>\\n<ul>\\n\\t<li>\\n\\t\\t<em><font color="#333333" face="Helvetica Neue, Helvetica, Arial, sans-serif" size="2"><span style="line-height: 18px;">Articulos</span></font></em></li>\\n\\t<li>\\n\\t\\t<em><font color="#333333" face="Helvetica Neue, Helvetica, Arial, sans-serif" size="2"><span style="line-height: 18px;">Noticias</span></font></em></li>\\n\\t<li>\\n\\t\\t<font color="#333333" face="Helvetica Neue, Helvetica, Arial, sans-serif" size="2"><span style="line-height: 18px;"><i>Videos</i></span></font></li>\\n\\t<li>\\n\\t\\t<em><span style="line-height: 18px; color: rgb(51, 51, 51); font-family: \\\'Helvetica Neue\\\', Helvetica, Arial, sans-serif; font-size: small;">Preguntas</span></em></li>\\n\\t<li>\\n\\t\\t<em><font color="#333333" face="Helvetica Neue, Helvetica, Arial, sans-serif" size="2"><span style="line-height: 18px;">Programcion</span></font></em></li>\\n</ul>\\n<p>\\n\\t<em><font color="#333333" face="Helvetica Neue, Helvetica, Arial, sans-serif" size="2"><span style="line-height: 18px;">Esta es la lista del contenido que puedes publicar, y compartir en Foxter, cada uno con sus categorias especificas.</span></font></em></p>\\n<p>\\n\\t<em><strong>Ayudanos a mejorar:</strong></em></p>\\n<p>\\n\\t<em>tus sugerencias son bien recibidas en Foxter, en el feedback (la imagen negra que esta a &nbsp;tuderecha), puedes enviarnos sugerencias sobre que mas te gustaria ver en Foxter, envianos tus comentarios.</em></p>\\n<p>\\n\\t<em><strong>Creditos:</strong></em></p>\\n<p>\\n\\tFoxter fue desarrollado con las siguientes tecnologias:</p>\\n<ol>\\n\\t<li>\\n\\t\\t<i>Samuel bonilla (CEO de Foxter, <a target="_blank" href="https://twitter.com/sambonill">@sambonill</a>)</i></li>\\n\\t<li>\\n\\t\\t<i><a target="_blank" href="http://www.python.org/">python</a>&nbsp;(creado por&nbsp;<span style="font-family: HelveticaNeue, \\\'Helvetica Neue\\\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 18px;">Guido van Rossum</span>)</i></li>\\n\\t<li>\\n\\t\\t<i><a target="_blank" href="http://www.web2py.com/">web2py</a>&nbsp;(creado por massimo Di pierro)</i></li>\\n\\t<li>\\n\\t\\t<i><a target="_blank" href="https://github.com/rochacbruno/Movuca">movuca</a> (desarrollado por bruno rocha)</i></li>\\n\\t<li>\\n\\t\\t<i><a target="_blank" href="http://twitter.github.com/bootstrap/">Bootstrab</a> (desarrollado por twitter)</i></li>\\n\\t<li>\\n\\t\\t<em><a target="_blank" href="http://jquery.com/">jquery</a> (desarrollado por&nbsp;<span style="font-family: HelveticaNeue, \\\'Helvetica Neue\\\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 18px;">John Resig</span>)</em></li>\\n</ol>\\n<p>\\n\\t&nbsp;</p>\\n\\n\', escape=False)\nresponse.write(\'\\n  </div>\\n  <div class="modal-footer">\\n    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>\\n    <!-- button class="btn btn-primary">Save changes</button -->\\n  </div>\\n</div>\\n\\n    \\n      </footer>\\n      \', escape=False)\nresponse.write(\'\\n\\n<ul style="list-style:none;margin-left:0px;">\\n\', escape=False)\nfor i,page in enumerate(internalpages, 1):\n    response.write(\'\\n <li style="float:left;">\\n  <a href="\', escape=False)\n    response.write(CURL(\'page\',\'show\', extension=False, args=page.slug))\n    response.write(\'">\', escape=False)\n    response.write(page.title)\n    response.write(\'</a>\\n  <span style="margin-left:5px;margin-right:5px;">|</span>\\n </li>  \\n\', escape=False)\n    pass\nresponse.write(\'\\n\\n\\n</ul> \\n\\n    </div><!--/.fluid-container-->\\n  \\n\\n</body></html>\\n\', escape=False)'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/python/P\xc3\xbablico/web2py/web2py-master/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/python/P\xc3\xbablico/web2py/web2py-master/applications/foxter/views/bootstrap/app/person/publictimeline.html", line 565, in <module>\n  File "/home/python/P\xc3\xbablico/web2py/web2py-master/applications/foxter/views/bootstrap/app/person/publictimeline.html", line 507, in eventbox\n  File "/home/python/P\xc3\xbablico/web2py/web2py-master/gluon/globals.py", line 202, in write\n    self.body.write(xmlescape(data))\n  File "/home/python/P\xc3\xbablico/web2py/web2py-master/gluon/html.py", line 120, in xmlescape\n    return data.xml()\n  File "/home/python/P\xc3\xbablico/web2py/web2py-master/gluon/languages.py", line 409, in xml\n    return str(self) if self.M else escape(str(self))\n  File "/home/python/P\xc3\xbablico/web2py/web2py-master/gluon/languages.py", line 369, in __str__\n    self.T.translate(self.m, self.s))\n  File "/home/python/P\xc3\xbablico/web2py/web2py-master/gluon/languages.py", line 886, in translate\n    message = self.params_substitution(message, symbols)\n  File "/home/python/P\xc3\xbablico/web2py/web2py-master/gluon/languages.py", line 863, in params_substitution\n    #message = message % symbols\nTypeError: format requires a mapping\n'
p11
s.